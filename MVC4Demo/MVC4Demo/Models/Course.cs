using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace MVC4Demo.Models
{
    public class Course
    {

        //The DatabaseGenerated attribute with the None parameter on the CourseID 
        //property specifies that primary key values are provided by the user rather
        //than generated by the database.

       [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Display( Name = "Number" )]
        public int CourseID { get; set; }
        [StringLength(50, MinimumLength = 3 )]
        public string Title { get; set; }
        [Range(0,5)]
        public int Credits { get; set; }

        [Display(Name = "Department")]
        public int DepartmentID { get; set; }

        //Foreign Keys

        //The course entity has a foreign key property DepartmentID which points to the 
        //related Department entity and it has a Department navigation property.The Entity
        //Framework doesn't require you to add a foreign key property to your data model 
        //when you have a navigation property for a related entity.  EF automatically creates 
        //foreign keys in the database wherever they are needed. But having the foreign key in the
        //data model can make updates simpler and more efficient. 
        public virtual Department Department { get; set; }
        //A course can have any number of students enrolled in it, so the Enrollments navigation property is a collection: 
        public virtual ICollection<Enrollment> Enrollments { get; set; }
        //A course may be taught by multiple instructors, so the Instructors navigation property is a collection: 
        public virtual ICollection<Instructor> Instructors { get; set; }
    }
}